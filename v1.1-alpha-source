#Import time for sleep function
import time
#Import random
import random
#Track progress on player
room_num = 0
#Keeps track of player turns
turn = 0
#Goal in way of the walls
goal_in_way = False
#Player in way of walls
player_in_way = False
#Hold previous player value
move_list = [1, 1]
#Generate first row
def gen_top():
    top = [' ', '_', '_', '_', '_', '_', ' ']
    return top
#Generate second row
def gen_row1():
    row1 = ['|', ' ', ' ', ' ', ' ', ' ', '|']
    return row1
#Generate thrid row
def gen_row2():
    row2 = ['|', ' ', ' ', ' ', ' ', ' ', '|']
    return row2
#Generate fourth row
def gen_row3():
    row3 = ['|', ' ', ' ', ' ', ' ', ' ', '|']
    return row3
#Generate fifth row
def gen_bottom():
    bottom = [' ', '_', '_', '_', '_', '_', ' ']
    return bottom
#Generate the row combined
def gen_map():
    print(*top)
    print(*row1)
    print(*row2)
    print(*row3)
    print(*bottom)
print("v1.0-alpha")
option = 'start'
#Main function to see what to do
while option != 'quit':
    #Start the game
    if option == 'start':
        #Ask player what to do
        user = input("What would you like to do? ")
        if user == 'play':
            print("Starting...")
            #Player coordinates
            playerx = 1
            playery = 1
            option = 'play'
        elif user == 'quit':
            option = 'quit'
        else:
            print("Please try again!")
    #Once the player is playing, then generate the map and access player position
    elif option == 'play':
        #Generate the rows
        print("Working")
        top = gen_top()
        row1 = gen_row1()
        row2 = gen_row2()
        row3 = gen_row3()
        bottom = gen_bottom()
        #Check playerx for any OOB
        if playerx <= 1:
            playerx = 1
            row1[playery] = 'X'
        elif playerx == 2:
            row2[playery] = 'X'
        elif playerx >= 3:
            playerx = 3
            row3[playery] = 'X'
        else:
            print("IDK how but the wall and row check just broke.")
        #Use generated rows that have been edited to form map
        if turn == 0:
            #Find goal spot
            goalx = random.randrange(1, 3)
            goaly = random.randrange(1, 6)
            if goalx == 1:
                row1[goaly] = 'O'
            elif goalx == 2:
                row2[goaly] = 'O'
            elif goalx == 3:
                row3[goaly] = 'O'
            else:
                print("It do be broke in the goal area.")
        elif turn > 0:
            if goalx == 1:
                row1[goaly] = 'O'
            elif goalx == 2:
                row2[goaly] = 'O'
            elif goalx == 3:
                row3[goaly] = 'O'
            else:
                print("It do be broke in the goal area.")
        #Generate walls
        wall_gen = random.randrange(0, 2)
        wallx = random.randrange(1, 3)
        wally = random.randrange(1, 6)
        #Is the goal in the way
        if wallx == goalx and wally == goaly:
            goal_in_way = True
        else:
            goal_in_way = False
        #Is the player in the way
        if playerx == wallx and playery == wally:
            playerx = move_list[0]
            playery = move_list[1]
            player_in_way = True
        else:
            player_in_way = False
        if turn == 0 and wall_gen == 1 and goal_in_way == False and player_in_way == False:
            if wallx == 1:
                row1[wally] = '|'
            elif wallx == 2:
                row2[wally] = '|'
            elif wallx == 3:
                row3[wally] = '|'
            else:
                print("It do be broke in the wall area.")
        else:
            if wallx == 1:
                row1[wally] = '|'
            elif wallx == 2:
                row2[wally] = '|'
            elif wallx == 3:
                row3[wally] = '|'
        print(room_num)
        gen_map()
        print("GoalX: " + str(goalx))
        print("GoalY: " + str(goaly))
        print("PlayerX: " + str(playerx))
        print("PlayerY: " + str(playery))
        print('Turn: ' + str(turn))
        turn += 1
        option = 'move'
    #Choose to move
    elif option == 'move':
        movement = input("Move left, right, up, or down. ")
        if movement == 'left':
            move_list[1] = playery
            playery -= 1
        elif movement == 'right':
            move_list[1] = playery
            playery += 1
        elif movement == 'up':
            move_list[0] = playerx
            playerx -= 1
        elif movement == 'down':
            move_list[0] = playerx
            playerx += 1
        else:
            print('Error: Movement broken')
            option = 'quit'
        if playerx == goalx and playery == goaly:
            room_num += 1
            turn = 0
            playerx = 1
            playery = 1
            option = 'play'
        else:
            option = 'play'
    elif option == 'test':
        #Generate the map
        print("Working")
        top = gen_top()
        row1 = gen_row1()
        row2 = gen_row2()
        row3 = gen_row3()
        bottom = gen_bottom()
        
    else:
        print('Error: Something broke')
        option = 'quit'
